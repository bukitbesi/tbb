(function() {
    // Configurable variables
    const config = {
        numPosts: 5,
        showThumbnails: true,
        displayMore: false,
        displaySeparator: false,
        showCommentNum: false,
        showPostDate: false,
        showPostSummary: false,
        numChars: 62,
        feedUrl: '/feeds/posts/default?orderby=published&alt=json-in-script&callback=renderRecentPosts'
    };

    // Utility to create elements with attributes and content
    function createElement(tag, attributes = {}, content = '') {
        const element = document.createElement(tag);
        Object.entries(attributes).forEach(([key, value]) => {
            element.setAttribute(key, value);
        });
        if (content) element.innerHTML = content;
        return element;
    }

    // Format date
    function formatDate(dateString) {
        const date = new Date(dateString);
        const options = { year: 'numeric', month: 'short', day: 'numeric' };
        return date.toLocaleDateString('en-US', options);
    }

    // Truncate summary
    function truncateSummary(content, maxLength) {
        if (content.length <= maxLength) return content;
        return content.substring(0, maxLength).replace(/\s+\S*$/, '') + '...';
    }

    // Main function to render posts
    window.renderRecentPosts = function(data) {
        const posts = data.feed.entry || [];
        const container = document.querySelector('.recent_posts_arlina');
        if (!container) return;

        container.innerHTML = ''; // Clear existing content

        posts.slice(0, config.numPosts).forEach(entry => {
            const li = createElement('li');

            // Thumbnail
            if (config.showThumbnails && entry['media$thumbnail']) {
                const thumbnailUrl = entry['media$thumbnail'].url.replace('/s72-c/', '/s1600/');
                const wrapInfo = createElement('div', { class: 'wrapinfo' });
                const img = createElement('img', {
                    class: 'recent_thumb',
                    src: thumbnailUrl,
                    alt: entry.title.$t
                });
                wrapInfo.appendChild(img);
                li.appendChild(wrapInfo);
            }

            // Title
            const titleLink = createElement('a', {
                href: entry.link.find(link => link.rel === 'alternate').href,
                title: entry.title.$t
            }, entry.title.$t);
            li.appendChild(titleLink);

            // Post date
            if (config.showPostDate) {
                const date = createElement('i', {}, formatDate(entry.published.$t));
                li.appendChild(date);
            }

            // Summary
            if (config.showPostSummary && entry.summary.$t) {
                const summary = createElement('div', { class: 'post-summary' },
                    truncateSummary(entry.summary.$t, config.numChars));
                li.appendChild(summary);
            }

            // Comment count
            if (config.showCommentNum && entry.thr$total) {
                const comments = createElement('i', {}, `${entry.thr$total.$t} comments`);
                li.appendChild(comments);
            }

            // Separator
            if (config.displaySeparator) {
                li.style.borderBottom = '1px solid #eee';
            }

            container.appendChild(li);
        });
    };

    // Load the feed
    function loadFeed() {
        const script = createElement('script', {
            src: config.feedUrl,
            async: 'true'
        });
        document.body.appendChild(script);
    }

    // Initialize when DOM is ready
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', loadFeed);
    } else {
        loadFeed();
    }
})();